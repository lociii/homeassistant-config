<<: !include .defaults.yaml

esphome:
  name: ${name}
  platform: ESP8266
  board: esp8285

sensor:
  # uptime sensor
  - platform: uptime
    name: "${name}_uptime"
    unit_of_measurement: seconds
    update_interval: 10min
  # wifi signal sensor
  - platform: wifi_signal
    name: "${name} wifi signal"
    filters:
      - or:
        - heartbeat: 1h
        - delta: 5
  # power sensor
  - platform: hlw8012
    sel_pin:
      number: GPIO12
      inverted: true
    cf_pin: GPIO05
    cf1_pin: ${cf1_pin}
    change_mode_every: 3
    update_interval: 1s
    # current sensor
    current:
      name: "${name} current"
      unit_of_measurement: A
      accuracy_decimals: 2
      filters:
        # map from sensor -> measured value
        - calibrate_linear:
            - 0.0 -> 0.013
            - 0.08208 -> 0.071
            - 1.34223 -> 1.066
            - 5.57170 -> 4.408
            - 6.69184 -> 5.259
            - 6.97187 -> 5.540
        # make everything below 0.01A appear as just 0A
        # furthermore it corrects 0.013A for the power usage of the plug
        - lambda: if (x < (0.01 - 0.013)) return 0; else return (x - 0.013);
        - or:
          - throttle: ${update_throttle}
          - delta: 0.03
    # voltage sensor
    voltage:
      name: "${name} voltage"
      unit_of_measurement: V
      accuracy_decimals: 1
      filters:
        # map from sensor -> measured value
        - calibrate_linear:
            - 0.0 -> 0.0
            - 602.87506 -> 229.9
            - 609.8 -> 232.8
        - throttle: ${update_throttle}
    # power sensor
    power:
      id: "${name}_power_usage"
      name: "${name} power usage"
      unit_of_measurement: W
      icon: mdi:flash-circle
      accuracy_decimals: 0
      filters:
        # map from sensor -> measured value
        - calibrate_linear:
            - 0.0 -> 1.14
            - 62.06167 -> 10.93
            - 1503.27161 -> 247.6
            - 1599.81213 -> 263.7
            - 3923.67700 -> 631.4
            - 7109.50928 -> 1148.0
            - 7237.0857 -> 1193.0
            - 7426.71338 -> 1217.0
        # make everything below 2W appear as just 0W
        # furthermore it corrects 1.14W for the power usage of the plug
        - lambda: if (x < (2 + 1.14)) return 0; else return (x - 1.14);
        - or:
          - throttle: ${update_throttle}
          - delta: 3
  # total daily energy sensor
  - platform: total_daily_energy
    name: "${name} daily energy usage"
    power_id: "${name}_power_usage"
    filters:
      # multiplication factor from W to kW is 0.001
      - multiply: 0.001
    unit_of_measurement: kWh

binary_sensor:
  # device status sensor
  - platform: status
    name: "${name} status"
  # binary sensor for the button press
  - platform: gpio
    name: "${name} sensor"
    pin:
      number: GPIO13
      inverted: true
    on_press:
      - switch.toggle: "${name}_actor"

switch:
  # switch to restart the plug
  - platform: restart
    name: "${name} restart"
  # switch to toggle the relay
  - platform: gpio
    id: "${name}_actor"
    name: "${friendly_name}"
    pin: ${actor_pin}
    restore_mode: ${restore_mode}
    on_turn_on:
      - light.turn_on: "${name}_led"
    on_turn_off:
      - light.turn_off: "${name}_led"

output:
  # relay state led
  - platform: esp8266_pwm
    id: "${name}_state_led"
    pin:
      number: ${state_led_pin}
      inverted: true

light:
  # relay state light
  - platform: monochromatic
    output: "${name}_state_led"
    id: "${name}_led"

# uses the red led as a status indicator
status_led:
  pin:
    number: ${status_led_pin}
    inverted: true
