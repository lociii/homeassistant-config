<<: !include .defaults.yaml

esphome:
  name: ${name}
  platform: ESP8266
  board: esp01_1m

# define generic outputs than can be mapped by lights or switches
output:
  # output controller A
  - platform: gpio
    id: "${name}_actor_a"
    pin:
      number: GPIO4
  # output controller B
  - platform: gpio
    id: "${name}_actor_b"
    pin:
      number: GPIO15

i2c:
  sda: GPIO12
  scl: GPIO14

sensor:
  # uptime sensor
  - platform: uptime
    name: "${name} uptime"
  # wifi signal sensor
  - platform: wifi_signal
    name: "${name} wifi signal"
    update_interval: 30s

  # power measurement
  - platform: ade7953
    voltage:
      name: "${name} voltage"
    current_a:
      name: "${name} current A"
      filters:
        - lambda: if (x < 0.1) return 0; else return (x);
    current_b:
      name: "${name} current B"
      filters:
        - lambda: if (x < 0.1) return 0; else return (x);
    active_power_a:
      id: "${name}_power_usage_a"
      name: "${name} power A"
      unit_of_measurement: W
      icon: mdi:flash-circle
      accuracy_decimals: 0
      filters:
        - multiply: -1
        - lambda: if (x < 1) return 0; else return (x);
    active_power_b:
      id: "${name}_power_usage_b"
      name: "${name} power B"
      unit_of_measurement: W
      icon: mdi:flash-circle
      accuracy_decimals: 0
      filters:
        - multiply: -1
        - lambda: if (x < 1) return 0; else return (x);
    update_interval: 5s

  # device temperature
  - platform: ntc
    sensor: "${name}_resistance_reading"
    id: "${name}_temperature"
    name: "${name} temperature"
    calibration:
      b_constant: 3350
      reference_resistance: 10kOhm
      reference_temperature: 298.15K
  - platform: resistance
    id: "${name}_resistance_reading"
    sensor: "${name}_analog_reading"
    configuration: DOWNSTREAM
    resistor: 32kOhm
  - platform: adc
    id: "${name}_analog_reading"
    pin: A0
