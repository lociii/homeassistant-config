version: '3.7'

services:
  # https://hub.docker.com/r/library/eclipse-mosquitto/tags/
  mosquitto:
    container_name: mosquitto
    restart: unless-stopped
    image: eclipse-mosquitto:1.5.6
    volumes:
      - ${PWD}/mosquitto/passwd:/mosquitto/passwd
      - ${PWD}/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto_log:/mosquitto/log
      - mosquitto_data:/mosquitto/data
      - /etc/localtime:/etc/localtime:ro
    ports:
    - 1883:1883

  # https://hub.docker.com/r/philhawthorne/ha-dockermon/tags/
  hadockermon:
    container_name: hadockermon
    restart: unless-stopped
    image: philhawthorne/ha-dockermon:v0.0.10
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/ha-dockermon.yaml:/config/configuration.yaml

  # https://hub.docker.com/r/mdillon/postgis/tags/
  postgresql:
    container_name: postgresql
    restart: unless-stopped
    image: mdillon/postgis:9.6-alpine
    user: postgres
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASS=$POSTGRES_PASS
      - POSTGRES_DB=$POSTGRES_DB
    volumes:
      - postgresql:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro

  # https://hub.docker.com/r/library/influxdb/tags/
  influxdb:
    container_name: influxdb
    restart: unless-stopped
    image: influxdb:1.7.3-alpine
    volumes:
      - ${PWD}/influxdb.conf:/etc/influxdb/influxdb.conf:ro
      - influxdb:/var/lib/influxdb
    environment:
      - INFLUX_GRAPHITE_ENABLED='true'
      - INFLUXDB_USER=$INFLUXDB_USER
      - INFLUXDB_USER_PASSWORD=$INFLUXDB_PASS

  # https://hub.docker.com/r/grafana/grafana/tags/
  grafana:
    container_name: grafana
    restart: unless-stopped
    image: grafana/grafana:5.4.3
    depends_on:
      - influxdb
    volumes:
      - grafana:/var/lib/grafana
    ports:
      - "3000:3000"

  # https://hub.docker.com/r/library/chronograf/tags/
  chronograf:
    container_name: chronograf
    restart: unless-stopped
    image: chronograf:1.7.7
    depends_on:
      - influxdb
    volumes:
      - chronograf:/var/lib/chronograf
    ports:
      - "8888:8888"

  # https://hub.docker.com/r/homeassistant/home-assistant/tags/
  homeassistant:
    container_name: homeassistant
    restart: unless-stopped
    image: homeassistant/home-assistant:0.87.0
    depends_on:
      - influxdb
      - postgresql
    volumes:
      - ${PWD}/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - homeassistant_media:/media
    tmpfs:
      - /tmp
    privileged: true

  # https://hub.docker.com/r/acockburn/appdaemon/tags/
  appdaemon:
    container_name: appdaemon
    restart: unless-stopped
    image: acockburn/appdaemon:3.0.2
    volumes:
      - ${PWD}/appdaemon:/conf
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - homeassistant

  # https://hub.docker.com/r/gmelillo/dehydrated-lexicon/tags/
  letsencrypt:
    container_name: letsencrypt
    restart: "no"
    image: gmelillo/dehydrated-lexicon:0.6.2
    volumes:
      - ${PWD}/letsencrypt/certs:/dehydrated/certs
      - ${PWD}/letsencrypt/domains.txt:/dehydrated/domains.txt
      - ${PWD}/letsencrypt/accounts:/dehydrated/accounts
      - ${PWD}/letsencrypt/chains:/dehydrated/chains
    environment:
      - LEXICON_INWX_USERNAME=$INWX_USERNAME
      - LEXICON_INWX_PASSWORD=$INWX_PASSWORD
      - PROVIDER=inwx

  # https://hub.docker.com/r/library/nginx/tags/
  nginx:
    container_name: nginx
    image: nginx:1.15.8
    restart: unless-stopped
    volumes:
      - ${PWD}/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ${PWD}/nginx/conf.d/default.template:/etc/nginx/conf.d/default.template
      - ${PWD}/letsencrypt/certs/${MY_DOMAIN}:/etc/letsencrypt/
      - ${PWD}/nginx/cert:/etc/nginx/cert/
    environment:
      - MY_DOMAIN=$MY_DOMAIN
    ports:
      - 80:80  # http redirect to ssl
      - 443:443  # ssl
      - 815:815 # paperless
      - 5050:5050  # appdaemon
      - 9001:9001  # mosquitto websocket
    command: /bin/sh -c "envsubst '$$MY_DOMAIN' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

  # https://hub.docker.com/r/nicolargo/glances/tags/
  glances:
    container_name: glances
    image: nicolargo/glances:latest
    restart: unless-stopped
    environment:
      - GLANCES_OPT=-w
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro

  ################################
  # OWNTRACKS
  ################################

  # https://hub.docker.com/r/owntracks/recorder/tags
  owntracks:
      image: owntracks/recorder:0.8.3-4
      volumes:
        - owntracks_config:/config
        - owntracks_store:/store
      restart: unless-stopped
      environment:
        - OTR_HOST=mosquitto
        - OTR_USER=$MQTT_USER
        - OTR_PASS=$MQTT_PASSWORD
      ports:
        - 8083:8083

  ################################
  # PAPERLESS
  ################################

  # https://hub.docker.com/r/danielquinn/paperless/tags
  paperless_webserver:
    image: danielquinn/paperless:latest
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl" , "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - paperless_data:/usr/src/paperless/data
      - paperless_media:/usr/src/paperless/media
      # You have to adapt the local path you want the consumption
      # directory to mount to by modifying the part before the ':'.
      - ./consume:/consume
    # The reason the line is here is so that the webserver that doesn't do
    # any text recognition and doesn't have to install unnecessary
    # languages the user might have set in the env-file by overwriting the
    # value with nothing.
    environment:
      - PAPERLESS_OCR_LANGUAGES=
      - PAPERLESS_PASSPHRASE=$PAPERLESS_PASSPHRASE
    command: ["runserver", "--insecure", "--noreload", "0.0.0.0:8000"]

  # https://hub.docker.com/r/danielquinn/paperless/tags
  paperless_consumer:
    image: danielquinn/paperless:latest
    restart: unless-stopped
    depends_on:
      - paperless_webserver
    volumes:
      - paperless_data:/usr/src/paperless/data
      - paperless_media:/usr/src/paperless/media
      # This should be set to the same value as the consume directory
      # in the webserver service above.
      - ./consume:/consume
      # Likewise, you can add a local path to mount a directory for
      # exporting. This is not strictly needed for paperless to
      # function, only if you're exporting your files: uncomment
      # it and fill in a local path if you know you're going to
      # want to export your documents.
      # - /path/to/another/arbitrary/place:/export
    environment:
      # passphrase to gpg encode document for storage
      - PAPERLESS_PASSPHRASE=$PAPERLESS_PASSPHRASE
      # list of languages to be supported for ocr
      - PAPERLESS_OCR_LANGUAGES=$PAPERLESS_OCR_LANGUAGES
      # mail host settings
      - PAPERLESS_CONSUME_MAIL_HOST=$PAPERLESS_CONSUME_MAIL_HOST
      - PAPERLESS_CONSUME_MAIL_PORT=$PAPERLESS_CONSUME_MAIL_PORT
      - PAPERLESS_CONSUME_MAIL_USER=$PAPERLESS_CONSUME_MAIL_USER
      - PAPERLESS_CONSUME_MAIL_PASS=$PAPERLESS_CONSUME_MAIL_PASS
      - PAPERLESS_CONSUME_MAIL_INBOX=$PAPERLESS_CONSUME_MAIL_INBOX
      # secret phrase that must be contained in the email body to allow import
      - PAPERLESS_EMAIL_SECRET=$PAPERLESS_EMAIL_SECRET
      # define how many threads are allowed for ocr
      - PAPERLESS_OCR_THREADS=4
      # accept documents even if the ocr could not detect the language
      - PAPERLESS_FORGIVING_OCR=True
    command: ["document_consumer"]

volumes:
  chronograf: {}
  grafana: {}
  homeassistant_media: {}
  influxdb: {}
  mosquitto_log: {}
  mosquitto_data: {}
  postgresql: {}

  owntracks_config: {}
  owntracks_store: {}

  paperless_data: {}
  paperless_media: {}
