version: '3.7'

services:
  # https://hub.docker.com/r/library/eclipse-mosquitto/tags/
  mosquitto:
    container_name: mosquitto
    restart: unless-stopped
    image: eclipse-mosquitto:1.5.5
    volumes:
      - ${PWD}/mosquitto/passwd:/mosquitto/passwd
      - ${PWD}/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto_log:/mosquitto/log
      - mosquitto_data:/mosquitto/data
      - /etc/localtime:/etc/localtime:ro
    ports:
    - 1883:1883

  # https://hub.docker.com/r/philhawthorne/ha-dockermon/tags/
  hadockermon:
    container_name: hadockermon
    restart: unless-stopped
    image: philhawthorne/ha-dockermon:v0.0.10
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PWD}/ha-dockermon.yaml:/config/configuration.yaml

  # https://hub.docker.com/r/mdillon/postgis/tags/
  postgresql:
    container_name: postgresql
    restart: unless-stopped
    image: mdillon/postgis:9.6-alpine
    user: postgres
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASS=$POSTGRES_PASS
      - POSTGRES_DB=$POSTGRES_DB
    volumes:
      - postgresql:/var/lib/postgresql/data
      - /etc/localtime:/etc/localtime:ro

  # https://hub.docker.com/r/library/influxdb/tags/
  influxdb:
    container_name: influxdb
    restart: unless-stopped
    image: influxdb:1.7.2-alpine
    volumes:
      - ${PWD}/influxdb.conf:/etc/influxdb/influxdb.conf:ro
      - influxdb:/var/lib/influxdb
    environment:
      - INFLUX_GRAPHITE_ENABLED='true'
      - INFLUXDB_USER=$INFLUXDB_USER
      - INFLUXDB_USER_PASSWORD=$INFLUXDB_PASS

  # https://hub.docker.com/r/grafana/grafana/tags/
  grafana:
    container_name: grafana
    restart: unless-stopped
    image: grafana/grafana:5.4.2
    depends_on:
      - influxdb
    volumes:
      - grafana:/var/lib/grafana
    ports:
      - "3000:3000"

  # https://hub.docker.com/r/library/chronograf/tags/
  chronograf:
    container_name: chronograf
    restart: unless-stopped
    image: chronograf:1.7.5
    depends_on:
      - influxdb
    volumes:
      - chronograf:/var/lib/chronograf
    ports:
      - "8888:8888"

  # https://hub.docker.com/r/homeassistant/home-assistant/tags/
  homeassistant:
    container_name: homeassistant
    restart: unless-stopped
    image: homeassistant/home-assistant:0.85.1
    depends_on:
      - influxdb
      - postgresql
    volumes:
      - ${PWD}/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - homeassistant_media:/media
    tmpfs:
      - /tmp
    privileged: true

  # https://hub.docker.com/r/acockburn/appdaemon/tags/
  appdaemon:
    container_name: appdaemon
    restart: unless-stopped
    image: acockburn/appdaemon:3.0.2
    volumes:
      - ${PWD}/appdaemon:/conf
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - homeassistant

  # https://hub.docker.com/r/gmelillo/dehydrated-lexicon/tags/
  letsencrypt:
    container_name: letsencrypt
    restart: "no"
    image: gmelillo/dehydrated-lexicon:0.6.2
    volumes:
      - ${PWD}/letsencrypt/certs:/dehydrated/certs
      - ${PWD}/letsencrypt/domains.txt:/dehydrated/domains.txt
      - ${PWD}/letsencrypt/accounts:/dehydrated/accounts
      - ${PWD}/letsencrypt/chains:/dehydrated/chains
    environment:
      - LEXICON_INWX_USERNAME=$INWX_USERNAME
      - LEXICON_INWX_PASSWORD=$INWX_PASSWORD
      - PROVIDER=inwx

  # https://hub.docker.com/r/library/nginx/tags/
  nginx:
    container_name: nginx
    image: nginx:1.15.8
    restart: unless-stopped
    volumes:
      - ${PWD}/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ${PWD}/nginx/conf.d/default.template:/etc/nginx/conf.d/default.template
      - ${PWD}/letsencrypt/certs/${MY_DOMAIN}:/etc/letsencrypt/
      - ${PWD}/nginx/cert:/etc/nginx/cert/
    environment:
      - MY_DOMAIN=$MY_DOMAIN
    ports:
      - 80:80  # http redirect to ssl
      - 443:443  # ssl
      - 5050:5050  # appdaemon
    command: /bin/sh -c "envsubst '$$MY_DOMAIN' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"

  # https://hub.docker.com/r/nicolargo/glances/tags/
  glances:
    container_name: glances
    image: nicolargo/glances:latest
    restart: unless-stopped
    environment:
      - GLANCES_OPT=-w
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/localtime:/etc/localtime:ro

volumes:
  chronograf: {}
  grafana: {}
  homeassistant_media: {}
  influxdb: {}
  mosquitto_log: {}
  mosquitto_data: {}
  postgresql: {}
